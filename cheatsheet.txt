Voicebot instructions

CLI Starting point: root of project ( where docker-compose.yml is ! ) 

1) Start the local servers

In one terminal (FastAPI):

# from repo root (where docker-compose.yml is)
docker compose up -d
# sanity check
curl -s http://127.0.0.1:8000/   # -> {"ok":true,"service":"voicebot_api"}

and in another terminal please do
cd webapp
php artisan serve --host=127.0.0.1 --port=9000



2) Make sure Laravel points at FastAPI on 127.0.0.1

Edit webapp/.env:

VOICEBOT_API_URL=http://127.0.0.1:8000

-------------------------------



Most common (auto-detects branch, skips local build, rebuilds remote API only if needed):

./scripts/all_in_one.sh deploy@voicebot.tv.digital


Specify branch:

./scripts/all_in_one.sh deploy@voicebot.tv.digital --branch main


Include a commit message:

./scripts/all_in_one.sh deploy@voicebot.tv.digital --branch main -m "fix: mic fallback + chat-voice"


Force a remote API rebuild even if detector says “no”:

./scripts/all_in_one.sh deploy@voicebot.tv.digital --force-api-rebuild


Do a quick local API build test first (useful before pushing):

./scripts/all_in_one.sh deploy@voicebot.tv.digital --local-build-api

Notes / assumptions

Your compose service for FastAPI is named api. If it isn’t, change the two docker compose … api lines.

The script won’t restart nginx/php-fpm because your Laravel folder is deployed in-place and PHP-FPM reload isn’t needed for code changes; nginx config changes would be separate ops.

The Laravel deploy is idempotent and keeps .env if present.

The API rebuild detector watches server/**, Dockerfile, and common Python dep files







